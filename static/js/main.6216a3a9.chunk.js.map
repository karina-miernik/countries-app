{"version":3,"sources":["components/Styling.module.css","components/Nav.js","components/PageWrapper.js","components/CountriesItem.js","components/Loader.js","components/Form.js","components/Countries.js","components/MainPage.js","components/CountriesDetails.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","styles","nav","to","link","PageWrapper","children","wrapper","CountriesItem","title","capital","img","id","Card","style","width","countryItem","Img","variant","src","Body","Title","Text","countryButtonWrapper","countryButton","Loader","Spinner","animation","Form","filter","onFormChange","formWrapper","FormControl","form","placeholder","aria-label","onChange","e","target","value","Countries","useState","countries","setCountries","isLoading","setIsLoading","text","setText","useEffect","fetch","then","r","json","arrayCountries","Object","keys","map","key","formContainer","country","name","toLowerCase","includes","flag","MainPage","countriesWrapper","CountriesDetails","useParams","setCountry","console","log","container","borderButton","margin","toString","countryWrapper","countryImgWrapper","countryRightWrapper","countryTitle","countryTxtWrapper","countryFirstCol","nativeName","region","countrySecCol","currencies","courency","padding","languages","language","borders","border","Content","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6216a3a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Styling_nav__3xe1-\",\"link\":\"Styling_link__cNeK3\",\"formContainer\":\"Styling_formContainer__3YJYQ\",\"formWrapper\":\"Styling_formWrapper__lNv5c\",\"wrapper\":\"Styling_wrapper__Ob5vH\",\"countries\":\"Styling_countries__2-czv\",\"countriesWrapper\":\"Styling_countriesWrapper__1rlZN\",\"countryItem\":\"Styling_countryItem__13ZU6\",\"countryButtonWrapper\":\"Styling_countryButtonWrapper__2NcQO\",\"countryButton\":\"Styling_countryButton__1NtLL\",\"countryWrapper\":\"Styling_countryWrapper__3Goz5\",\"countryImgWrapper\":\"Styling_countryImgWrapper__1QQNn\",\"countryTitle\":\"Styling_countryTitle__2FHoc\",\"countryTxtWrapper\":\"Styling_countryTxtWrapper__15XIq\",\"countryFirstCol\":\"Styling_countryFirstCol__nvWKT\",\"countrySecCol\":\"Styling_countrySecCol__13zoi\",\"borderButton\":\"Styling_borderButton__2eF94\",\"container\":\"Styling_container__qQtEA\",\"form\":\"Styling_form__HXMTl\"};","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { Link } from \"react-router-dom\";\nimport styles from './Styling.module.css'\nconst Nav = () => {\n  return (\n\n    <nav className={styles.nav}>\n      <Link to={`/`} className={styles.link}>Find a country</Link>\n\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport styles from \"./Styling.module.css\";\nconst PageWrapper = ({ children }) => {\n  return <div className={styles.wrapper}>{children}</div>;\n};\n\nexport default PageWrapper;\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport styles from \"./Styling.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst CountriesItem = ({ title, capital, img, id }) => {\n\n  // const [countries, setCountries] = useState([])\n  // useEffect(() => {\n  //   fetch(`https://restcountries.eu/rest/v2/all`)\n  //     .then((r) => r.json())\n  //     .then((countries) => {\n  //       setCountries(countries)\n  //       console.log(countries);\n  //     });\n  // }, [])\n\n  return (\n\n\n\n    <Card\n      style={{ width: \"18rem\" }}\n      className={styles.countryItem}\n    >\n      <Link to={`/${id}`} className={styles.link}>\n\n        <Card.Img variant=\"top\" src={img} />\n      </Link>\n      <Card.Body>\n        <Card.Title>{title}</Card.Title>\n        <Card.Text>Capital: {capital}</Card.Text>\n        <div className={styles.countryButtonWrapper}>\n          <Link to={`/${id}`} className={styles.link}>\n            <button className={styles.countryButton}>More</button>\n          </Link>\n        </div>\n      </Card.Body>\n    </Card>\n\n\n\n  );\n};\n\nexport default CountriesItem;\n","import React from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\n\nconst Loader = () => {\n    return <>\n      <Spinner animation=\"border\" variant=\"info\" />\n    </>\n}\n\nexport default Loader","import React, { useState } from \"react\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport styles from \"./Styling.module.css\";\n\nconst Form = ({ filter, onFormChange }) => {\n\n  const handleOnChange = (e) => {\n    onFormChange(e.target.value)\n  }\n\n\n  return (\n    <>\n      <div className={styles.formWrapper}>\n        <FormControl className={styles.form}\n          placeholder=\"Search...\"\n          aria-label=\"Search...\"\n          onChange={handleOnChange}\n          value={filter}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Form;\n","import React, { useState, useEffect } from \"react\";\nimport CountriesItem from \"./CountriesItem\";\nimport Loader from './Loader'\nimport Form from './Form'\nimport styles from \"./Styling.module.css\";\n\nconst Countries = () => {\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true)\n  const [text, setText] = useState('')\n\n  useEffect(() => {\n    fetch(\"https://restcountries.eu/rest/v2/all\")\n      .then((r) => r.json())\n      .then((countries) => {\n        const arrayCountries = countries\n          ? Object.keys(countries).map((key) => {\n            return {\n              id: key,\n              ...countries[key],\n            }\n          })\n          : []\n        setCountries(arrayCountries);\n        setIsLoading(false)\n      });\n  }, []);\n\n  const handleOnFormChange = (text) => {\n    setText(text)\n  }\n  return (\n    <>\n      <div className={styles.formContainer}>\n        <Form\n          filter={text}\n          onFormChange={handleOnFormChange}\n          value={text}\n        />\n      </div>\n\n      {\n        isLoading\n          ? <Loader />\n\n          : countries\n\n            .filter(country => {\n              return country.name.toLowerCase()\n                .includes(text.toLowerCase());\n\n            })\n            .map((country) => {\n              return (\n                <CountriesItem\n                  title={country.name}\n                  capital={country.capital}\n                  img={country.flag}\n                  key={country.id}\n                  id={country.id}\n                />\n\n              );\n            })\n\n\n      }\n    </>\n  );\n};\n\nexport default Countries;\n","import React from \"react\";\n\nimport PageWrapper from \"./PageWrapper\";\nimport Countries from \"./Countries\";\nimport styles from \"./Styling.module.css\";\n\nconst MainPage = () => {\n    return <>\n        <PageWrapper>\n            <div className={styles.countriesWrapper}>\n                <Countries className={styles.countries} />\n            </div>\n        </PageWrapper>\n    </>\n}\n\nexport default MainPage","import React, { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom'\nimport styles from \"./Styling.module.css\";\nimport { Link } from \"react-router-dom\";\n// import styles from \"./Styling.module.css\";\n\nconst CountriesDetails = () => {\n    const { id } = useParams()\n    const [country, setCountry] = useState([])\n    useEffect(() => {\n        fetch(`https://restcountries.eu/rest/v2/all/?id=${id}`)\n            .then((r) => r.json())\n            .then((country) => {\n\n                const arrayCountries = country\n                    ? Object.keys(country).map((key) => {\n                        return {\n                            id: key,\n                            ...country[key],\n                        }\n                    })\n                    : []\n                setCountry(arrayCountries);\n                console.log(arrayCountries)\n\n            });\n    }, [id])\n\n    return (\n        <>\n\n\n            <div className={styles.container}>\n                <Link to=\"/\">  <button className={styles.borderButton} style={{ margin: '1rem' }}>Go Back</button></Link>\n\n                {country.map(\n                    (country) =>\n                        country.id.toString() === id &&\n                        <>\n                            <div className={styles.countryWrapper}>\n                                <div className={styles.countryImgWrapper}>\n                                    <img src={country.flag} />\n                                </div>\n                                <div className={styles.countryRightWrapper}>\n                                    <div className={styles.countryTitle}>\n                                        <h2>{country.name}</h2>\n                                    </div>\n                                    <div className={styles.countryTxtWrapper}>\n                                        <div className={styles.countryFirstCol}>\n                                            <p><b>Native Name:</b> {country.nativeName}</p>\n                                            <p><b>Capital:</b> {country.capital}</p>\n                                            <p><b>Region:</b> {country.region}</p>\n                                        </div>\n                                        <div className={styles.countrySecCol}>\n                                            <p><b>Currency:</b> {country.currencies.map(courency => <span style={{ padding: '0.5rem' }}>{courency.name}</span>)}</p>\n                                            <p><b>Languages:</b> {country.languages.map(language => <span style={{ padding: '0.5rem' }}>{language.name}</span>)}</p>\n                                            <p><b>Borders:</b> {country.borders.map(border => {\n                                                return <>\n            <button className={styles.borderButton}>{border}</button>\n\n                                                </>\n                                            })}</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </>\n                )}\n\n\n\n            </div>\n\n\n        </>\n    );\n};\n\nexport default CountriesDetails;\n","import React from \"react\";\n\nimport MainPage from './MainPage'\nimport CountriesDetails from \"./CountriesDetails\";\nimport { Route, Switch } from 'react-router-dom'\n\nconst Content = () => {\n  return (\n    <>\n\n      <Switch>\n        <Route exact path='/' component={MainPage} />\n        <Route path='/:id' component={CountriesDetails} />\n      </Switch>\n\n\n    </>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport Nav from \"./components/Nav\";\nimport Content from \"./components/Content\";\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Nav />\n        <Content />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}